---

- name: update software
  yum:
    name: "*"
    state: latest
  # skipping ansible lint tests - failure is against state: latest, but this is fine as we want the latest updates available if we bootstrap a box
  tags:
    - skip_ansible_lint

- name: check for kernel updates
  shell: LAST_KERNEL=$(rpm -q --last kernel | awk 'NR==1{sub(/kernel-/,""); print $1}'); CURRENT_KERNEL=$(uname -r); if [ $LAST_KERNEL != $CURRENT_KERNEL ]; then echo 'reboot'; else echo 'no'; fi
  ignore_errors: true
  changed_when: kernel.stdout.find("no") != -1
  register: kernel
  # skipping ansible lint tests - failure is against env vars in shell
  tags:
    - skip_ansible_lint

- name: reboot
  command: sleep 5 && shutdown -r now "Reboot issued by Ansible for Kernel updates"
  async: 1
  poll: 0
  when: kernel.changed

- name: wait for the instances to come back
  wait_for:
    host: "{{ ec2_public_dns_name }}"
    port: 22
    state: started
    delay: 1
